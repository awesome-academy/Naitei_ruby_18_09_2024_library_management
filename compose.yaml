version: "1.0"
services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    environment:
      RAILS_ENV: development
      DATABASE_HOST: db
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      - db
      - elasticsearch
      - redis
      - sidekiq
    stdin_open: true
    tty: true

  db:
    image: mysql:8.0
    container_name: db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_DB_PASSWORD}
      MYSQL_DATABASE: library_management_system_development
    volumes:
      - db_data:/var/lib/mysql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    hostname: elasticsearch.local
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  sidekiq:
    container_name: sidekiq
    build:
      context: .
      dockerfile: Dockerfile
    command: ["sidekiq"]
    depends_on:
      - redis
      - db
    environment:
      RAILS_ENV: development
      DATABASE_HOST: db
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      REDIS_URL: ${REDIS_URL}
    volumes:
      - .:/app

volumes:
  db_data:
